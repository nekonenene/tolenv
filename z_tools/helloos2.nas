; hello-os
; TAB=2

; DB命令: data byte の略。1バイトを直接書く命令
; RESB命令: reserve byte の略。xバイト空けてくれという命令
; DW命令: data word の略。word とは、アセンブラの世界では16bitの意味、つまり2バイト
; DD命令: data double-word の略。32bitのこと。つまり4バイト

; 以下は標準的なFAT12フォーマットフロッピーディスクのための記述
  DB 0xeb, 0x4e, 0x90
  DB "HELLOIPL"        ; ブートセクタの名前を自由に書いて良い（8バイト）
  DW 512               ; 1セクタの大きさ（512にしなければいけない）
  DB 1                 ; クラスタの大きさ（1セクタにしなければいけない）
  DW 1                 ; FATがどこから始まるか（ふつうは1セクタ目からにする）
  DB 2                 ; FATの個数（2にしなければいけない）
  DW 224               ; ルートディレクトリ領域の大きさ（ふつうは224エントリにする）
  DW 2880              ; このドライブの大きさ（2880セクタにしなければいけない）
  DB 0xf0              ; メディアのタイプ（0xf0 にしなければいけない）
  DW 9                 ; FAT領域の長さ（9セクタにしなければいけない）
  DW 18                ; 1トラックにいくつのセクタがあるか（18にしなければいけない）
  DW 2                 ; ヘッドの数（2にしなければいけない）
  DD 0                 ; パーティションを使ってないのでここは必ず0
  DD 2880              ; このドライブの大きさをもう一度書く
  DB 0, 0, 0x29        ; 作者もよくわからないらしい
  DD 0xffffffff        ; ボリュームシリアル番号らしい
  DB "HELLO-OS   "     ; ディスクの名前（11バイト）
  DB "FAT12   "        ; フォーマットの名前（8バイト）
  RESB 18              ; 18バイト空けておく

; プログラム本体
  DB 0xb8, 0x00, 0x00, 0x8e, 0xd0, 0xbc, 0x00, 0x7c
  DB 0x8e, 0xd8, 0x8e, 0xc0, 0xbe, 0x74, 0x7c, 0x8a
  DB 0x04, 0x83, 0xc6, 0x01, 0x3c, 0x00, 0x74, 0x09
  DB 0xb4, 0x0e, 0xbb, 0x0f, 0x00, 0xcd, 0x10, 0xeb
  DB 0xee, 0xf4, 0xeb, 0xfd

; メッセージ部分
  DB 0x0a, 0x0a         ; 改行を2つ
  DB "hello, world"
  DB 0x0a               ; 改行
  DB 0

  ; 0x1fe = 256 + 16 * 15 + 14 = 270 + 240 = 510
  ; $ マークはここまでが何バイトかを計算して代入してくれる変数
  ; つまり (510 - <ここまでのバイト数>) バイト分 0x00 で埋める
  ; DB 0x55, 0xaa を 510 バイト目に置くためにこのような計算になっている
  RESB 0x1fe-$          ; 0x001fe までを 0x00 で埋める命令

  DB 0x55, 0xaa

; 以下はブートセクタ以外の部分の記述
  DB 0xf0, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00
  RESB 4600
  DB 0xf0, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00
  RESB 1469432
